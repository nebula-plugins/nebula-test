/** Absolute minimum build to be able to publish when the plugin-plugin is not available */
import org.gradle.api.publish.maven.MavenPublication

buildscript {
    repositories { jcenter() }
    dependencies { classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:0.3' }
}

repositories { jcenter() }

apply plugin: 'groovy'
apply plugin: 'idea'

group = 'com.netflix.nebula'

apply plugin: 'maven-publish'

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

apply plugin: 'bintray'
def packageName = name
bintray {
    user = bintrayUser
    key = bintrayKey
    publications = ['mavenJava']
    pkg {
        repo = 'gradle-plugins'
        userOrg = 'nebula'
        name = packageName
        licenses = ['Apache-2.0']
    }
    // Will have to manually publish on bintray.com
}
bintrayUpload.dependsOn(build)

task install(dependsOn: 'publishMavenJavaPublicationToMavenLocal') << {
    logger.info "Installed $project.name"
}

plugins.withType(JavaPlugin) {
    sourceCompatibility = 1.6
    targetCompatibility = 1.6
}

dependencies {
    compile gradleApi()
    compile localGroovy()
    //compile "org.gradle:gradle-tooling-api:1.12" // might not be needed
    compile ('org.spockframework:spock-core:0.7-groovy-2.0') { exclude group: 'org.codehaus.groovy' }
     // compile ('com.energizedwork:spock-extensions:1.0-SNAPSHOT') { exclude group: 'org.codehaus.groovy' } // Waiting for this to be published
    compile 'cglib:cglib-nodep:2.2.2' // For Mocking classes with Spock
}

task createWrapper(type: Wrapper) {
    gradleVersion = '2.2.1'
}
